//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from LuceneParser.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ILuceneParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class LuceneParserBaseListener : ILuceneParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.topLevelQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTopLevelQuery([NotNull] LuceneParser.TopLevelQueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.topLevelQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTopLevelQuery([NotNull] LuceneParser.TopLevelQueryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.query"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery([NotNull] LuceneParser.QueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.query"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery([NotNull] LuceneParser.QueryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.disjQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDisjQuery([NotNull] LuceneParser.DisjQueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.disjQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDisjQuery([NotNull] LuceneParser.DisjQueryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.conjQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConjQuery([NotNull] LuceneParser.ConjQueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.conjQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConjQuery([NotNull] LuceneParser.ConjQueryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.modClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModClause([NotNull] LuceneParser.ModClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.modClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModClause([NotNull] LuceneParser.ModClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModifier([NotNull] LuceneParser.ModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModifier([NotNull] LuceneParser.ModifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClause([NotNull] LuceneParser.ClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClause([NotNull] LuceneParser.ClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.fieldRangeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldRangeExpr([NotNull] LuceneParser.FieldRangeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.fieldRangeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldRangeExpr([NotNull] LuceneParser.FieldRangeExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] LuceneParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] LuceneParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.groupingExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroupingExpr([NotNull] LuceneParser.GroupingExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.groupingExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroupingExpr([NotNull] LuceneParser.GroupingExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.fieldName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldName([NotNull] LuceneParser.FieldNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.fieldName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldName([NotNull] LuceneParser.FieldNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.termRangeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTermRangeExpr([NotNull] LuceneParser.TermRangeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.termRangeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTermRangeExpr([NotNull] LuceneParser.TermRangeExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.quotedTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuotedTerm([NotNull] LuceneParser.QuotedTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.quotedTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuotedTerm([NotNull] LuceneParser.QuotedTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="LuceneParser.fuzzy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuzzy([NotNull] LuceneParser.FuzzyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="LuceneParser.fuzzy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuzzy([NotNull] LuceneParser.FuzzyContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
